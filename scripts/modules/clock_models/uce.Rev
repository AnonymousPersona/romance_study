# The rate along each branch is drawn from an exponential prior
branch_rates_mean ~ dnExponential(10.0)

moves.append( mvScale(branch_rates_mean, lambda=0.1,  weight=10.0) )
moves.append( mvScale(branch_rates_mean, lambda=1.0,  weight=10.0) )

for(i in 1:n_branches){
    branch_rates[i] ~ dnExp(1/branch_rates_mean)
    moves.append( mvScale(branch_rates[i], lambda=1.5,  weight=20.0) )

}

# add a move on the branch rate vector
moves.append( mvVectorScale(branch_rates, lambda=0.1,  weight=4.0) )
moves.append( mvVectorScale(branch_rates, lambda=1.0,  weight=4.0) )
